<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.store.fresh.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.store.fresh.entity.User">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="valid" jdbcType="INTEGER" property="valid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="shipping_address" jdbcType="VARCHAR" property="shippingAddress" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_name, password, email, tel, salt, valid, create_time, login_date, login_ip,
    shipping_address
  </sql>
  <select id="selectByExample" parameterType="com.store.fresh.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.store.fresh.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.store.fresh.entity.User">
    insert into user (user_id, user_name, password,
      email, tel, salt, valid,
      create_time, login_date, login_ip,
      shipping_address)
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{valid,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{loginDate,jdbcType=TIMESTAMP}, #{loginIp,jdbcType=VARCHAR},
      #{shippingAddress,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.store.fresh.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="valid != null">
        valid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="loginDate != null">
        login_date,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
      <if test="shippingAddress != null">
        shipping_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginDate != null">
        #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="shippingAddress != null">
        #{shippingAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.store.fresh.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.valid != null">
        valid = #{record.valid,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginDate != null">
        login_date = #{record.loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginIp != null">
        login_ip = #{record.loginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.shippingAddress != null">
        shipping_address = #{record.shippingAddress,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_id = #{record.userId,jdbcType=VARCHAR},
    user_name = #{record.userName,jdbcType=VARCHAR},
    password = #{record.password,jdbcType=VARCHAR},
    email = #{record.email,jdbcType=VARCHAR},
    tel = #{record.tel,jdbcType=VARCHAR},
    salt = #{record.salt,jdbcType=VARCHAR},
    valid = #{record.valid,jdbcType=INTEGER},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    login_date = #{record.loginDate,jdbcType=TIMESTAMP},
    login_ip = #{record.loginIp,jdbcType=VARCHAR},
    shipping_address = #{record.shippingAddress,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.store.fresh.entity.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginDate != null">
        login_date = #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="shippingAddress != null">
        shipping_address = #{shippingAddress,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.store.fresh.entity.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      valid = #{valid,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      login_date = #{loginDate,jdbcType=TIMESTAMP},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      shipping_address = #{shippingAddress,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>

  <!--以下是自己写的-->
  <resultMap id="UserWithRoleMap" type="com.store.fresh.entity.User">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="valid" jdbcType="INTEGER" property="valid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="shipping_address" jdbcType="VARCHAR" property="shippingAddress" />
  </resultMap>
  <select id="findRoles" parameterType="java.lang.String" resultType="java.lang.String">
    select c.role
    from (select * from user where user_name = #{username,jdbcType=VARCHAR}) a left join user_role b
    on a.user_id = b.user_id
    left join role c
    on b.role_id = c.id
  </select>

  <select id="findPermissions" parameterType="java.lang.String" resultType="java.lang.String">
    select e.`name`
    from (select * from user where user_name = #{username,jdbcType=VARCHAR}) a left join user_role b
    on a.user_id = b.user_id
    left join role c
    on c.id = b.role_id
    left join role_permission d
    on c.role = d.role_id
    left join permission e
    on d.permission_id = e.id
  </select>

  <!--<select id="selectUserWithRoleByExample" parameterType="com.store.fresh.entity.UserExample" resultMap="BaseResultMap">-->
    <!--select-->
    <!--<if test="distinct">-->
      <!--distinct-->
    <!--</if>-->
    <!--<include refid="Base_Column_List" />-->
    <!--from user-->
    <!--<if test="_parameter != null">-->
      <!--<include refid="Example_Where_Clause" />-->
    <!--</if>-->
    <!--<if test="orderByClause != null">-->
      <!--order by ${orderByClause}-->
    <!--</if>-->
  <!--</select>-->
</mapper>